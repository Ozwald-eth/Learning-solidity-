//// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

contract OzwaldStorage {

//this will get initialized to 0
    uint256 favoriteNumber; 
    bool favoriteBool;


    struct People {
        uint256 favoriteNumber; 
        string name;
    }

        People[] public people;
        mapping(string => uint256 ) public nameToFavouriteNumber;

    function store (uint256 _favoritenumber) public {
        favoriteNumber = _favoritenumber;
    }

    function retrieve() public view returns(uint256) {
        return favoriteNumber; 
    }

    function addPerson(string memory _name, uint256 _favoritenumber) public {

        people.push(People(_favoritenumber,_name ));
            nameToFavouriteNumber[_name ] = _favoritenumber;
    }
//this code was created following a tutorial, im posting to track my progress over time ... this was created within my first 2 hours of soldiity learning!

}
